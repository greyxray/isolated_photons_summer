#!/bin/sh

SOURCE=cross_sec.cxx
EXE=exe

if [ "$1" ]
then
 SOURCE="$1.cxx"
fi

echo compiling $EXE
rm -f $EXE *.o

echo "g++ -std=gnu++0x -o $EXE $SOURCE `root-config --cflags` `root-config --libs` `gsl-config --cflags` `gsl-config --libs` -lMinuit -lMathMore"
g++ -o $EXE $SOURCE -I/diskmnt/b/huettmaa/CodeTim/lib/GSL/include  -std=gnu++0x `root-config --cflags` `root-config --libs` `gsl-config --libs` -lMinuit -L/diskmnt/b/huettmaa/CodeTim/lib/GSL/lib 

rm -f log_$EXE err_log_$EXE
#systJetE+ systJetE- systPhE+ systPhE- systElE+ systElE-
# zero systJetE+ systJetE- systPhE+ systPhE- systElE+ systElE- fit+ fit- systAcc
FAIL=0
for i in zero systJetE+ systJetE- systPhE+ systPhE- systElE+ systElE- fit+ fit- systAcc 
do
    #FAIL=0€€
    echo "starting ($i)"
    ./$EXE $i $2 &
    #./main 06e data 0 0 0 $i > /dev/null 2> /dev/null &
    
done



for job in `jobs -p`
do
    echo $job
    wait $job || let "FAIL+=1"
done
echo $FAIL
if [ "$FAIL" == "0" ];
then
echo "YAY!"
else
echo "FAIL! ($FAIL)"
fi
echo "end ($i)"
#./$EXE $2
# > log_$EXE 2> err_log_$EXE  &
#tail -f err_log_$EXE
#exit 0
#readme
